#!/usr/bin/env python2.5
# 
# Copyright (c) 2008 The Panucci Audiobook and Podcast Player Project
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# 


import dbus
import dbus.glib
import os.path
import sys

session_bus = dbus.SessionBus()

local_module_dir = os.path.join(os.path.dirname(sys.argv[0]), '..', 'src')
if os.path.isdir(local_module_dir):
    sys.path.append(local_module_dir)

if os.path.exists(sys.argv[-1]) and len(sys.argv) > 1:
    filename = sys.argv[-1]
else:
    filename = None

try:
    remote_object = session_bus.get_object('org.panucci', '/player')
    print 'Found panucci instance already running, will try to use it...'
except dbus.exceptions.DBusException:
    remote_object = None

if remote_object is None:
    from panucci import panucci
    # This could eventually be made fancy with optparse
    debug = '--debug' in sys.argv
    panucci.run(filename=filename, debug=debug)
else:
    if filename is None:
        remote_object.show_main_window(dbus_interface='org.panucci.interface')
    else:
        remote_object.play_file(filename, dbus_interface='org.panucci.interface')

